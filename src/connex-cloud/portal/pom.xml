<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
    	<groupId>dev.iotapp.connex</groupId>
	  	<artifactId>connex-cloud</artifactId>
	  	<version>0.0.1-SNAPSHOT</version>
	</parent>

   	<groupId>dev.iotapp.connex</groupId>
	<artifactId>connex-cloud-portal</artifactId>
	<version>0.0.1-SNAPSHOT</version>

    <properties>
        <node.version>v16.13.1</node.version>
        <npm.version>8.6.0</npm.version>
        <frontend.maven.plugin.version>1.12.1</frontend.maven.plugin.version>
    </properties>

    <profiles>
		<!-- 1.1 调用前端项目中package.json定义的构建命令，Maven执行时可通过-P指定需要执行的profile: 例如：mvn clean install -P npm-build-dev -->
		<profile>
			<id>npm run build</id>
			<activation>
				<!-- 默认执行这个Profile -->
				<activeByDefault>true</activeByDefault>
				<property>
					<name>npm-run-build</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>${frontend.maven.plugin.version}</version>
		
						<configuration>
							<!-- 前端项目的目录 -->
							<workingDirectory>${basedir}</workingDirectory>
						</configuration>
						
						<executions>
							<!-- 调用前端项目构建命令进行构建 -->
							<execution>
								<id>npm run build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<!-- 前端项目的构建命令，需要根据package.json中定义的命令进行设置-->
									<arguments>run build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>npm run dev</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>npm-run-dev</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>${frontend.maven.plugin.version}</version>
	
						<configuration>
							<!-- 前端项目的目录 -->
							<workingDirectory>${basedir}</workingDirectory>
						</configuration>
						
						<executions>
							<!-- 调用前端项目构建命令进行构建 -->
							<execution>
								<id>npm run dev</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<!-- 前端项目的构建命令，需要根据package.json中定义的命令进行设置-->
									<arguments>run dev</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

    <build>
    	<resources>
	        <resource>
	            <directory>${basedir}/target/generated-resources</directory>
                <!--directory>${basedir}/dist</directory-->
	        </resource>
        </resources>
 		<plugins>
			<!-- 利用maven-clean-plugin插件在清理文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${basedir}/node_modules</directory>
                        </fileset>
                    </filesets>
                </configuration>
			</plugin>
			<!-- 1. 前端项目构建的配置：安装node和npm、执行npm install下载依赖、以及package.json定义的构建命令 -->
			<plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <!-- Use the latest released version:
                https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
                <version>${frontend.maven.plugin.version}</version>

				<configuration>
					<!-- 前端项目的目录 -->
                    <workingDirectory>${basedir</workingDirectory>

					<nodeVersion>${node.version}</nodeVersion>
                    <npmVersion>${npm.version}</npmVersion>
					<!-- node和npm的安装目录 -->
					<installDirectory>${basedir}/target/dev-tools</installDirectory> 
                </configuration>

                <executions>
					<!-- 本地安装node和npm -->
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
					<!-- 下载npm依赖 -->
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
		</plugins>
    </build>
</project>